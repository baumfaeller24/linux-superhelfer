{
  "cycle": 20,
  "accuracy": 65.0,
  "cost_score": 82.5,
  "heavy_recall": 100.0,
  "correct_routes": 13,
  "total_queries": 20,
  "cycle_time": 0.0016605579876340926,
  "routing_distribution": {
    "fast": 5,
    "code": 13,
    "heavy": 2
  },
  "category_accuracy": {
    "basic_commands": 41.66666666666667,
    "code_tasks": 100.0,
    "mathematical": 100.0
  },
  "results": [
    {
      "query": "Welches Kommando listet alle Dateien auf??",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: kommando; Code keywords: list; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941361
    },
    {
      "query": "Erstelle eine Python-Funktion f\u00fcr Datei-Synchronisation?",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Code keywords: funktion, python; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941411
    },
    {
      "query": "Erstelle eine Python-Funktion f\u00fcr Datei-Synchronisation Danke im Voraus!",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Code keywords: funktion, python; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.194143
    },
    {
      "query": "Schreibe ein Python-Skript f\u00fcr Performance-Monitoring Danke im Voraus!",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: rm; Code keywords: python, for; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941452
    },
    {
      "query": "Wie kann ich alle laufenden Prozesse anzeigen bitte?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.25,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: ss; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.25
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941466
    },
    {
      "query": "Wie kann ich die Netzwerkverbindungen anzeigen? Danke im Voraus!",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.2222222222222222,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: du; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.2222222222222222
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941485
    },
    {
      "query": "Entwickle ein Shell-Skript f\u00fcr Datenbank-Backup",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: shell; Code keywords: entwickle; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941507
    },
    {
      "query": "Welcher Befehl zeigt den verf\u00fcgbaren Speicher? Danke im Voraus!",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "fast",
      "correct": true,
      "complexity": 0.2222222222222222,
      "reasoning": "Fast model selected: fast_basic_command (Linux keywords: befehl)",
      "debug_info": {
        "route_reason": "fast_basic_command"
      },
      "timestamp": 1757166362.1941535
    },
    {
      "query": "Entwickle ein Shell-Skript f\u00fcr Datenbank-Backup?",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: shell; Code keywords: entwickle; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941555
    },
    {
      "query": "Kannst du mir helfen: berechne die optimale anzahl von connections im connection pool",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "heavy",
      "correct": true,
      "complexity": 0.35384615384615387,
      "reasoning": "Heavy model selected: heavy_win_balanced H:3.5 T:1.0 (Linux keywords: du; Complexity indicators: berechne, rechne; Scores - Heavy: 3.5, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [
          "\\b(bestimme|berechne|minimiere|maximiere|optimiere|finde|l\u00f6se)\\b[^\\.]{0,80}\\b(optimal\\w*|minimum|maxim\\w*|argmin|argmax)\\b",
          "\\boptimale?\\s+(anzahl|gr\u00f6\u00dfe|batch[-\\s]?gr\u00f6\u00dfe|timeouts?|cache[-\\s]?gr\u00f6\u00dfe|connections?)\\b",
          "\\b(berechne|bestimme).*\\b(anzahl|gr\u00f6\u00dfe|wert\\w*)\\b.*\\b(connection\\w*|pool|thread\\w*|cache|puffer|buffer)\\b"
        ],
        "tech_hits": [],
        "scores": {
          "heavy": 3.5,
          "tech": 1.0,
          "complexity": 0.35384615384615387
        },
        "route_reason": "heavy_win_balanced H:3.5 T:1.0"
      },
      "timestamp": 1757166362.1941576
    },
    {
      "query": "Welches Kommando listet alle Dateien auf? Danke im Voraus!",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: kommando; Code keywords: list; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.194159
    },
    {
      "query": "Wie kann ich die Festplattenbelegung pr\u00fcfen??",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "fast",
      "correct": true,
      "complexity": 0.0,
      "reasoning": "Fast model selected: fast_default (Scores - Heavy: 0.0, Tech: 0.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 0.0,
          "complexity": 0.0
        },
        "route_reason": "fast_default"
      },
      "timestamp": 1757166362.1941638
    },
    {
      "query": "Kannst du mir helfen: welcher befehl zeigt den verf\u00fcgbaren speicher?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "fast",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Fast model selected: fast_basic_command (Linux keywords: befehl, du)",
      "debug_info": {
        "route_reason": "fast_basic_command"
      },
      "timestamp": 1757166362.1941679
    },
    {
      "query": "L\u00f6se das Gleichungssystem: x+y=10, x-y=2?",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "heavy",
      "correct": true,
      "complexity": 1.0,
      "reasoning": "Heavy model selected: heavy_win_balanced H:2.0 T:1.0 (Linux keywords: ss; Complexity indicators: l\u00f6se; Scores - Heavy: 2.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [
          "\\bgleichungssystem\\b"
        ],
        "tech_hits": [],
        "scores": {
          "heavy": 2.0,
          "tech": 1.0,
          "complexity": 1.0
        },
        "route_reason": "heavy_win_balanced H:2.0 T:1.0"
      },
      "timestamp": 1757166362.19417
    },
    {
      "query": "Wie kann ich alle laufenden Prozesse anzeigen??",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.2857142857142857,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: ss; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.2857142857142857
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.194172
    },
    {
      "query": "Kannst du mir helfen: welcher befehl zeigt den verf\u00fcgbaren speicher?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "fast",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Fast model selected: fast_basic_command (Linux keywords: befehl, du)",
      "debug_info": {
        "route_reason": "fast_basic_command"
      },
      "timestamp": 1757166362.1941738
    },
    {
      "query": "Welcher Befehl zeigt die Systemzeit an bitte?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "fast",
      "correct": true,
      "complexity": 0.2857142857142857,
      "reasoning": "Fast model selected: fast_basic_command (Linux keywords: befehl)",
      "debug_info": {
        "route_reason": "fast_basic_command"
      },
      "timestamp": 1757166362.1941755
    },
    {
      "query": "Was macht der df Befehl bitte?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: befehl, df; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941774
    },
    {
      "query": "Kannst du mir helfen: erstelle ein python-tool f\u00fcr netzwerk-monitoring",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: du; Code keywords: python; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.1941793
    },
    {
      "query": "Wie kann ich alle laufenden Prozesse anzeigen?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.2857142857142857,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: ss; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.2857142857142857
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757166362.194181
    }
  ]
}