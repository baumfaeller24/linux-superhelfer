{
  "cycle": 82,
  "accuracy": 55.0,
  "cost_score": 30.000000000000004,
  "heavy_recall": 42.857142857142854,
  "correct_routes": 11,
  "total_queries": 20,
  "cycle_time": 0.0016021728515625,
  "routing_distribution": {
    "fast": 7,
    "code": 10,
    "heavy": 3
  },
  "category_accuracy": {
    "basic_commands": 50.0,
    "mathematical": 42.857142857142854,
    "intermediate": 40.0,
    "code_tasks": 100.0
  },
  "results": [
    {
      "query": "Kannst du mir helfen: was ist der unterschied zwischen ls und ll?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.26666666666666666,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: du; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.26666666666666666
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.2134297
    },
    {
      "query": "Berechne Fibonacci-Zahlen zur Bestimmung von Retry-Intervallen?",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "code",
      "correct": false,
      "complexity": 0.9333333333333333,
      "reasoning": "Code model selected: code_tech T:1.0 (Code keywords: try; Complexity indicators: berechne, rechne; Scores - Heavy: 1.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 1.0,
          "tech": 1.0,
          "complexity": 0.9333333333333333
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.213433
    },
    {
      "query": "Bestimme die mathematisch optimale Cache-Gr\u00f6\u00dfe f\u00fcr Datenbank-Queries",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "heavy",
      "correct": true,
      "complexity": 0.5,
      "reasoning": "Heavy model selected: heavy_win H:2.5 T:0.0 (Scores - Heavy: 2.5, Tech: 0.0)",
      "debug_info": {
        "heavy_hits": [
          "\\bmathematisch\\w*\\b.{0,40}\\boptimal\\w*\\b",
          "\\b(bestimme|berechne|minimiere|maximiere|optimiere|finde|l\u00f6se)\\b[^\\.]{0,80}\\b(optimal\\w*|minimum|maxim\\w*|argmin|argmax)\\b"
        ],
        "tech_hits": [],
        "scores": {
          "heavy": 2.5,
          "tech": 0.0,
          "complexity": 0.5
        },
        "route_reason": "heavy_win H:2.5 T:0.0"
      },
      "timestamp": 1757156832.2134385
    },
    {
      "query": "Was sind die Vor- und Nachteile von Docker vs. LXC? Danke im Voraus!",
      "category": "intermediate",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.15384615384615385,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: docker; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.15384615384615385
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.2134404
    },
    {
      "query": "Kannst du mir helfen: vergleiche verschiedene load-balancing-strategien",
      "category": "intermediate",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.3857142857142857,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: du; Complexity indicators: vergleiche; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.3857142857142857
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.2134423
    },
    {
      "query": "Entwickle ein Shell-Skript f\u00fcr Log-Rotation Danke im Voraus!",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: shell, log; Code keywords: entwickle; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.2134447
    },
    {
      "query": "Erstelle ein Bash-Tool f\u00fcr User-Management?",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: bash, gem; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.2134464
    },
    {
      "query": "Was sind Best Practices f\u00fcr Linux-Security-Hardening??",
      "category": "intermediate",
      "expected": "code",
      "actual": "fast",
      "correct": false,
      "complexity": 0.0,
      "reasoning": "Fast model selected: fast_default (Scores - Heavy: 0.0, Tech: 0.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 0.0,
          "complexity": 0.0
        },
        "route_reason": "fast_default"
      },
      "timestamp": 1757156832.2134495
    },
    {
      "query": "Bestimme die mathematisch optimale Cache-Gr\u00f6\u00dfe f\u00fcr Datenbank-Queries?",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "heavy",
      "correct": true,
      "complexity": 0.5,
      "reasoning": "Heavy model selected: heavy_win H:2.5 T:0.0 (Scores - Heavy: 2.5, Tech: 0.0)",
      "debug_info": {
        "heavy_hits": [
          "\\bmathematisch\\w*\\b.{0,40}\\boptimal\\w*\\b",
          "\\b(bestimme|berechne|minimiere|maximiere|optimiere|finde|l\u00f6se)\\b[^\\.]{0,80}\\b(optimal\\w*|minimum|maxim\\w*|argmin|argmax)\\b"
        ],
        "tech_hits": [],
        "scores": {
          "heavy": 2.5,
          "tech": 0.0,
          "complexity": 0.5
        },
        "route_reason": "heavy_win H:2.5 T:0.0"
      },
      "timestamp": 1757156832.2134511
    },
    {
      "query": "Berechne die optimale Timeout-Werte f\u00fcr HTTP-Requests?",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "fast",
      "correct": false,
      "complexity": 0.30000000000000004,
      "reasoning": "Fast model selected: fast_default (Complexity indicators: berechne, rechne; Scores - Heavy: 1.5, Tech: 0.0)",
      "debug_info": {
        "heavy_hits": [
          "\\b(bestimme|berechne|minimiere|maximiere|optimiere|finde|l\u00f6se)\\b[^\\.]{0,80}\\b(optimal\\w*|minimum|maxim\\w*|argmin|argmax)\\b"
        ],
        "tech_hits": [],
        "scores": {
          "heavy": 1.5,
          "tech": 0.0,
          "complexity": 0.30000000000000004
        },
        "route_reason": "fast_default"
      },
      "timestamp": 1757156832.2134533
    },
    {
      "query": "Berechne die optimale Timeout-Werte f\u00fcr HTTP-Requests?",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "fast",
      "correct": false,
      "complexity": 0.30000000000000004,
      "reasoning": "Fast model selected: fast_default (Complexity indicators: berechne, rechne; Scores - Heavy: 1.5, Tech: 0.0)",
      "debug_info": {
        "heavy_hits": [
          "\\b(bestimme|berechne|minimiere|maximiere|optimiere|finde|l\u00f6se)\\b[^\\.]{0,80}\\b(optimal\\w*|minimum|maxim\\w*|argmin|argmax)\\b"
        ],
        "tech_hits": [],
        "scores": {
          "heavy": 1.5,
          "tech": 0.0,
          "complexity": 0.30000000000000004
        },
        "route_reason": "fast_default"
      },
      "timestamp": 1757156832.2134552
    },
    {
      "query": "Wie kann ich die Festplattenbelegung pr\u00fcfen?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "fast",
      "correct": true,
      "complexity": 0.0,
      "reasoning": "Fast model selected: fast_default (Scores - Heavy: 0.0, Tech: 0.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 0.0,
          "complexity": 0.0
        },
        "route_reason": "fast_default"
      },
      "timestamp": 1757156832.2134573
    },
    {
      "query": "Vergleiche verschiedene Load-Balancing-Strategien?",
      "category": "intermediate",
      "expected": "code",
      "actual": "fast",
      "correct": false,
      "complexity": 0.1,
      "reasoning": "Fast model selected: fast_short (Complexity indicators: vergleiche)",
      "debug_info": {
        "route_reason": "fast_short"
      },
      "timestamp": 1757156832.2134588
    },
    {
      "query": "Wie zeige ich die CPU-Auslastung an? Danke im Voraus!",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "code",
      "correct": false,
      "complexity": 0.2222222222222222,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: cp; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.2222222222222222
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.2134602
    },
    {
      "query": "Vergleiche verschiedene Load-Balancing-Strategien?",
      "category": "intermediate",
      "expected": "code",
      "actual": "fast",
      "correct": false,
      "complexity": 0.1,
      "reasoning": "Fast model selected: fast_short (Complexity indicators: vergleiche)",
      "debug_info": {
        "route_reason": "fast_short"
      },
      "timestamp": 1757156832.2134614
    },
    {
      "query": "Programmiere einen Service-Monitor in Python?",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: service; Code keywords: programmiere, python; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.213463
    },
    {
      "query": "Welcher Befehl zeigt den verf\u00fcgbaren Speicher?",
      "category": "basic_commands",
      "expected": "fast",
      "actual": "fast",
      "correct": true,
      "complexity": 0.3333333333333333,
      "reasoning": "Fast model selected: fast_basic_command (Linux keywords: befehl)",
      "debug_info": {
        "route_reason": "fast_basic_command"
      },
      "timestamp": 1757156832.2134647
    },
    {
      "query": "L\u00f6se das Gleichungssystem: x+y=10, x-y=2",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "heavy",
      "correct": true,
      "complexity": 1.0,
      "reasoning": "Heavy model selected: heavy_win H:2.0 T:1.0 (Linux keywords: ss; Complexity indicators: l\u00f6se; Scores - Heavy: 2.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [
          "\\bgleichungssystem\\b"
        ],
        "tech_hits": [],
        "scores": {
          "heavy": 2.0,
          "tech": 1.0,
          "complexity": 1.0
        },
        "route_reason": "heavy_win H:2.0 T:1.0"
      },
      "timestamp": 1757156832.213467
    },
    {
      "query": "Kannst du mir helfen: bestimme die mathematisch beste partitionierung f\u00fcr gro\u00dfe datasets",
      "category": "mathematical",
      "expected": "heavy",
      "actual": "code",
      "correct": false,
      "complexity": 0.16666666666666666,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: du; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.16666666666666666
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.213469
    },
    {
      "query": "Kannst du mir helfen: entwickle ein shell-skript f\u00fcr datenbank-backup",
      "category": "code_tasks",
      "expected": "code",
      "actual": "code",
      "correct": true,
      "complexity": 0.4,
      "reasoning": "Code model selected: code_tech T:1.0 (Linux keywords: shell, du; Code keywords: entwickle; Scores - Heavy: 0.0, Tech: 1.0)",
      "debug_info": {
        "heavy_hits": [],
        "tech_hits": [],
        "scores": {
          "heavy": 0.0,
          "tech": 1.0,
          "complexity": 0.4
        },
        "route_reason": "code_tech T:1.0"
      },
      "timestamp": 1757156832.213471
    }
  ]
}